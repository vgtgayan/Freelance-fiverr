<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">int_array1</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">int_array1</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1432" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">int_array2</arg>&gt; may be accessed with a negative index, causing simulation mismatch.
</msg>

<msg type="info" file="Xst" num="1433" delta="old" >Contents of array &lt;<arg fmt="%s" index="1">int_array2</arg>&gt; may be accessed with an index that exceeds the array size. This could cause simulation mismatch.
</msg>

<msg type="warning" file="Xst" num="752" delta="old" >&quot;<arg fmt="%s" index="1">E:/xiling/New folder/FSM_Speeds_trajectory/FSM_Speed.vhd</arg>&quot; line <arg fmt="%d" index="2">50</arg>: Unconnected input port &apos;<arg fmt="%s" index="3">reset</arg>&apos; of component &apos;<arg fmt="%s" index="4">debouncer</arg>&apos; is tied to default value.
</msg>

<msg type="warning" file="Xst" num="752" delta="old" >&quot;<arg fmt="%s" index="1">E:/xiling/New folder/FSM_Speeds_trajectory/FSM_Speed.vhd</arg>&quot; line <arg fmt="%d" index="2">51</arg>: Unconnected input port &apos;<arg fmt="%s" index="3">reset</arg>&apos; of component &apos;<arg fmt="%s" index="4">debouncer</arg>&apos; is tied to default value.
</msg>

<msg type="warning" file="Xst" num="647" delta="old" >Input &lt;<arg fmt="%s" index="1">reset</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="1305" delta="old" >Output &lt;<arg fmt="%s" index="1">LD3</arg>&gt; is never assigned. Tied to value <arg fmt="%s" index="2">0</arg>.
</msg>

<msg type="warning" file="Xst" num="1305" delta="old" >Output &lt;<arg fmt="%s" index="1">Ld4</arg>&gt; is never assigned. Tied to value <arg fmt="%s" index="2">0</arg>.
</msg>

<msg type="warning" file="Xst" num="1780" delta="old" >Signal &lt;<arg fmt="%s" index="1">count2</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1780" delta="old" >Signal &lt;<arg fmt="%s" index="1">count</arg>&gt; is never used or assigned. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1781" delta="old" >Signal &lt;<arg fmt="%s" index="1">int_array2</arg>&gt; is used but never assigned. Tied to default value.
</msg>

<msg type="warning" file="Xst" num="1781" delta="old" >Signal &lt;<arg fmt="%s" index="1">int_array1</arg>&gt; is used but never assigned. Tied to default value.
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">speed_control_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">states</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;LD2&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">speed_control_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">states</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;LD1&gt; </arg>
</msg>

<msg type="info" file="Xst" num="3044" delta="old" >The ROM &lt;<arg fmt="%s" index="1">Mrom__varindex0000</arg>&gt; will be implemented as a read-only BLOCK RAM, absorbing the register: &lt;<arg fmt="%s" index="2">int1</arg>&gt;.
</msg>

<msg type="info" file="Xst" num="3044" delta="old" >The ROM &lt;<arg fmt="%s" index="1">Mrom__varindex0001</arg>&gt; will be implemented as a read-only BLOCK RAM, absorbing the register: &lt;<arg fmt="%s" index="2">int2</arg>&gt;.
</msg>

<msg type="info" file="Xst" num="3225" delta="old" >The RAM &lt;<arg fmt="%s" index="1">Mrom__varindex0000</arg>&gt; will be implemented as BLOCK RAM
</msg>

<msg type="info" file="Xst" num="3225" delta="old" >The RAM &lt;<arg fmt="%s" index="1">Mrom__varindex0001</arg>&gt; will be implemented as BLOCK RAM
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">speed_control_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">FSM_Speed</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;LD2&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="old" >The FF/Latch &lt;<arg fmt="%s" index="1">speed_control_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">FSM_Speed</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;LD1&gt; </arg>
</msg>

</messages>

